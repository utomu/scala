package recfun
import common._

object Main {
  def main(args: Array[String]) {
    
    def z="a)(oapoapao"
    countBrace(z.toList,0)
    println("Pascal's Triangle")
    for (row <- 0 to 10) {
      for (col <- 0 to row)
        print(pascal(col, row) + " ")
      println()
    }
  }

  /**
   * Exercise 1
   */
  def pascal(c: Int, r: Int): Int = 
    if (c<1 || r<2 || c==r) 1
    else pascal(c-1,r-1)+pascal(c,r-1)

  /**
   * Exercise 2
   */
    
  def countBrace(chList:List[Char], count:Int) :Int ={
      println(chList)
      if (chList.isEmpty) throw new NoSuchElementException
      else if (chList.head == '(' ) countBrace(chList.tail,count+1) 
      else if (chList.head == ')')  countBrace(chList.tail,count-1)
      else count
    }
      
  def balance(chars: List[Char]): Boolean = {
    def count:Int  =countBrace(chars,0)
    count == 0
    }

  /**
   * Exercise 3
   */
  def countChange(money: Int, coins: List[Int]): Int = ???
}
